//暂时仅支持单行注释，通过//标示。此行为注释，生成的物理文件不包含。
//暂时仅支持单行注释，通过//标示。此行为注释，生成的物理文件不包含。
//暂时仅支持单行注释，通过//标示。此行为注释，生成的物理文件不包含。
//说明。。。
//$..$标记需要解析的标签，如$getJavaPah()$表示根据包名计算的java文件保存路径。
//内部变量定义区域
//根据#FILE得知物理文件保存路径、名称
//#FILE=$getJspPah()$/$getClassInstance()$Add.jsp
#FILE=$getJavaPah()$/pojo/$getClass()$.java
//根据#LEVEL得知文件级别：分模块级别，单个类[数据表]级别
#LEVEL=CLASS
//#LEVEL=MODULE
//以下为输出的物理文件文件内容
package $getPackage()$.pojo ;

public class $getClass()$ {
              private $getClassIdType()$ $getClassId()$;
$FOR.CLASS.PROPERTY$
              private $getClassPropertyType()$ $getClassPropertyName()$;
$ENDFOR.CLASS.PROPERTY$

              public $getClassIdType()$ get$getClassIdIC()$(){
             	return $getClassId()$;
              }
              public void set$getClassIdIC()$( $getClassIdType()$ $getClassId()$){
             	this.$getClassId()$=$getClassId()$;
	      }
$FOR.CLASS.PROPERTY$

	      public $getClassPropertyType()$ get$getClassPropertyNameIC()$(){
    		      return $getClassPropertyName()$;
	      }
	      public void set$getClassPropertyNameIC()$($getClassPropertyType()$ $getClassPropertyName()$){
    		      this.$getClassPropertyName()$=$getClassPropertyName()$;
	      }
$ENDFOR.CLASS.PROPERTY$

	      public boolean equals(Object other) { 
	              if (! (other instanceof $getClass()$)) 
	              return false; 
	              $getClass()$ castOther = ($getClass()$) other; 
	              return this.$getClassId()$.equals(castOther.$getClassId()$); 
	      }

	      public int hashCode() {
	              return this.$getClassId()$.hashCode();
	      }
	
	      public String toString() {
	              return String.valueOf(this.$getClassId()$);
	      }






              /** @todo add logic--end */

}
