//暂时仅支持单行注释，通过//标示。此行为注释，生成的物理文件不包含。
//暂时仅支持单行注释，通过//标示。此行为注释，生成的物理文件不包含。
//暂时仅支持单行注释，通过//标示。此行为注释，生成的物理文件不包含。
//说明。。。
//$..$标记需要解析的标签，如$getJavaPah()$表示根据包名计算的java文件保存路径。
//内部变量定义区域
//根据#FILE得知物理文件保存路径、名称
//#FILE=$getJspPah()$/$getClassInstance()$Add.jsp
//#FILE=$getJavaPah()$/dao/$getClass()$DAO.java
#FILE=$getJavaPah()$/test/BaseTest.java
//根据#LEVEL得知文件级别：分模块级别，单个类[数据表]级别
//#LEVEL=CLASS
#LEVEL=MODULE
//以下为输出的物理文件文件内容
//**Action.java样例
package $getPackage()$.test;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.FileSystemXmlApplicationContext;

import junit.framework.TestCase;

public class BaseTest extends TestCase {
	private static String[] PATH = {
			"/WebRoot/WEB-INF/applicationContext-persistence.xml",
			"/WebRoot/WEB-INF/applicationContext-service.xml",
			"/WebRoot/WEB-INF/applicationContext-action.xml" };

	protected ApplicationContext ctx;

	public BaseTest(String string) {
		super(string);
	}

	@Override
	protected void setUp() throws Exception {
		ctx = new FileSystemXmlApplicationContext(PATH);
	}

	@Override
	protected void tearDown() throws Exception {
		ctx = null;
	}
}

